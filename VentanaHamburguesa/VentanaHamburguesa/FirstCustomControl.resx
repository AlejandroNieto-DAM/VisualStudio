<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>